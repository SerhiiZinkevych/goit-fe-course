{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendsListItem/FriendsListItem.module.css","components/FriendsList/FriendsList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendsListItem/FriendsListItem.js","components/FriendsList/FriendsList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","getRandomColor","color","i","Math","floor","random","Statistics","title","statistics","statList","map","id","percentage","key","item","style","backgroundColor","FriendsListItem","isOnline","online","offline","width","propTypes","friends","PropTypes","shape","number","isRequired","bool","string","FriendsList","friendsList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","homeWork","display","flexDirection","alignItems","taskTitle","fontFamily","App","user","statisticalData","transactions","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.848b5c49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendsListItem_status__irH07\",\"online\":\"FriendsListItem_online__1Uv9D FriendsListItem_status__irH07\",\"offline\":\"FriendsListItem_offline__2L4kK FriendsListItem_status__irH07\",\"avatar\":\"FriendsListItem_avatar__2CP1U\",\"item\":\"FriendsListItem_item__2scnf\",\"name\":\"FriendsListItem_name__2rOE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendsList_friendsList__1kxfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\"};","import React from 'react';\nimport styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ title = '', stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          key={id}\n          className={styles.item}\n          style={{ backgroundColor: getRandomColor() }}\n        >\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './FriendsListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst FriendsListItem = ({ isOnline = false, avatar, name }) => (\n  <li className={styles.item}>\n    <span className={isOnline ? styles.online : styles.offline}></span>\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendsListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendsListItem;\n","import React from 'react';\nimport FriendsListItem from '../FriendsListItem/FriendsListItem';\nimport PropTypes from 'prop-types';\nimport styles from './FriendsList.module.css';\n\nconst FriendsList = ({ friends }) => (\n  <ul className={styles.friendsList}>\n    {friends.map(friend => (\n      <FriendsListItem\n        key={friend.id}\n        isOnline={friend.isOnline}\n        avatar={friend.avatar}\n        name={friend.name}\n      />\n    ))}\n  </ul>\n);\n\nFriendsListItem.propTypes = {\n  friends: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default FriendsList;\n","import React from 'react';\nimport styles from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n//Components\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendsList from './FriendsList/FriendsList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n//Data files\nimport user from './Profile/user.json';\nimport statisticalData from './Statistics/statistical-data.json';\nimport friends from './FriendsList/friends.json';\nimport transactions from './TransactionHistory/transactions.json';\n\nconst styles = {\n  homeWork: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  taskTitle: {\n    fontFamily: 'Arial',\n  },\n};\n\nconst App = () => (\n  <div style={styles.homeWork}>\n    <h2 style={styles.taskTitle}>Задание 1 - Профиль социальной сети</h2>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n\n    <h2 style={styles.taskTitle}>Задание 2 - Секция статистики</h2>\n\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n    <h2 style={styles.taskTitle}>Задание 3 - Список друзей</h2>\n\n    <FriendsList friends={friends} />\n\n    <h2 style={styles.taskTitle}>Задание 4 - История транзакций</h2>\n\n    <TransactionHistory items={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}